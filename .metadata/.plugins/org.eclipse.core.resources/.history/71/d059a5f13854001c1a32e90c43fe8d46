package com.example.resourceserver.config;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
public class AppConfig extends WebSecurityConfigurerAdapter{

	private final String clientId;
    private final String clientSecret;
    private final String introspectionUrl;

    AppConfig(
            @Value("${oauth.clientId}") final String clientId,
            @Value("${oauth.clientSecret}") final String clientSecret,
            @Value("${oauth.introspectionUrl}") final String introspectionUrl) {
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.introspectionUrl = introspectionUrl;
    }

    @Override
    public void configure(final HttpSecurity http) throws Exception {
        http.authorizeRequests(authz -> authz
                .antMatchers(HttpMethod.GET, "clientes").hasAnyAuthority("SCOPE_read")
                .antMatchers(HttpMethod.GET, "pessoas").hasAnyAuthority("SCOPE_read")
                //.antMatchers(HttpMethod.POST, "").hasRole("ADMIN")
                .anyRequest().permitAll())
                .oauth2ResourceServer(oauth2 -> oauth2
                        .opaqueToken(token -> token.introspectionUri(introspectionUrl)
                                .introspectionClientCredentials(clientId, clientSecret)
                        )
                );
    }

}
